error in line# 1
     lexed as: 
    should be:  CLASS
error in line# 2
     lexed as: 
    should be:  TYPEID A
error in line# 3
     lexed as: 
    should be:  '{'
error in line# 4
     lexed as: 
    should be:  OBJECTID var
error in line# 5
     lexed as: 
    should be:  ':'
error in line# 6
     lexed as: 
    should be:  TYPEID Int
error in line# 7
     lexed as:  CLASS
    should be:  ASSIGN
error in line# 8
     lexed as:  {
    should be:  INT_CONST 0
error in line# 9
     lexed as: 
    should be:  ';'
error in line# 10
     lexed as:    var : Int <- 0;
    should be:  OBJECTID value
error in line# 11
     lexed as: 
    should be:  '('
error in line# 12
     lexed as:    value() : Int { var };
    should be:  ')'
error in line# 13
     lexed as: 
    should be:  ':'
error in line# 14
     lexed as:    set_var(num : Int) : SELF_TYPE {
    should be:  TYPEID Int
error in line# 15
     lexed as:       {
    should be:  '{'
error in line# 16
     lexed as:          var <- num;
    should be:  OBJECTID var
error in line# 17
     lexed as:          self;
    should be:  '}'
error in line# 18
     lexed as:       }
    should be:  ';'
error in line# 19
     lexed as:    };
    should be:  OBJECTID set_var
error in line# 20
     lexed as: 
    should be:  '('
error in line# 21
     lexed as:    method1(num : Int) : SELF_TYPE {  -- same
    should be:  OBJECTID num
error in line# 22
     lexed as:       self
    should be:  ':'
error in line# 23
     lexed as:    };
    should be:  TYPEID Int
error in line# 24
     lexed as: 
    should be:  ')'
error in line# 25
     lexed as:    method2(num1 : Int, num2 : Int) : B {  -- plus
    should be:  ':'
error in line# 26
     lexed as:       (let x : Int in
    should be:  TYPEID SELF_TYPE
error in line# 27
     lexed as:  {
    should be:  '{'
error in line# 28
     lexed as:             x <- num1 + num2;
    should be:  '{'
error in line# 29
     lexed as:     (new B).set_var(x);
    should be:  OBJECTID var
error in line# 30
     lexed as:  }
    should be:  ASSIGN
error in line# 31
     lexed as:       )
    should be:  OBJECTID num
error in line# 32
     lexed as:    };
    should be:  ';'
error in line# 33
     lexed as: 
    should be:  OBJECTID self
error in line# 34
     lexed as:    method3(num : Int) : C {  -- negate
    should be:  ';'
error in line# 35
     lexed as:       (let x : Int in
    should be:  '}'
error in line# 36
     lexed as:  {
    should be:  '}'
error in line# 37
     lexed as:             x <- ~num;
    should be:  ';'
error in line# 38
     lexed as:     (new C).set_var(x);
    should be:  OBJECTID method1
error in line# 39
     lexed as:  }
    should be:  '('
error in line# 40
     lexed as:       )
    should be:  OBJECTID num
error in line# 41
     lexed as:    };
    should be:  ':'
error in line# 42
     lexed as: 
    should be:  TYPEID Int
error in line# 43
     lexed as:    method4(num1 : Int, num2 : Int) : D {  -- diff
    should be:  ')'
error in line# 44
     lexed as:             if num2 < num1 then
    should be:  ':'
error in line# 45
     lexed as:                (let x : Int in
    should be:  TYPEID SELF_TYPE
error in line# 46
     lexed as:   {
    should be:  '{'
error in line# 47
     lexed as:                      x <- num1 - num2;
    should be:  OBJECTID self
error in line# 48
     lexed as:              (new D).set_var(x);
    should be:  '}'
error in line# 49
     lexed as:           }
    should be:  ';'
error in line# 50
     lexed as:                )
    should be:  OBJECTID method2
error in line# 51
     lexed as:             #50 ELSE
    should be:  '('
error in line# 52
     lexed as: 
    should be:  OBJECTID num1
error in line# 53
     lexed as:                (let x : Int in
    should be:  ':'
error in line# 54
     lexed as:   {
    should be:  TYPEID Int
error in line# 55
     lexed as:              x <- num2 - num1;
    should be:  ','
error in line# 56
     lexed as:              (new D).set_var(x);
    should be:  OBJECTID num2
error in line# 57
     lexed as:   }
    should be:  ':'
error in line# 58
     lexed as:                )
    should be:  TYPEID Int
error in line# 59
     lexed as:             fi
    should be:  ')'
error in line# 60
     lexed as:    };
    should be:  ':'
error in line# 61
     lexed as: 
    should be:  TYPEID B
error in line# 62
     lexed as:    method5(num : Int) : E {  -- factorial
    should be:  '{'
error in line# 63
     lexed as:       (let x : Int <- 1 in
    should be:  '('
error in line# 64
     lexed as:  {
    should be:  LET
error in line# 65
     lexed as:     (let y : Int <- 1 in
    should be:  OBJECTID x
error in line# 66
     lexed as:        while y <= num loop
    should be:  ':'
error in line# 67
     lexed as:           {
    should be:  TYPEID Int
error in line# 68
     lexed as:                      x <- x * y;
    should be:  IN
error in line# 69
     lexed as:              y <- y + 1;
    should be:  '{'
error in line# 70
     lexed as:           }
    should be:  OBJECTID x
error in line# 71
     lexed as:        pool
    should be:  ASSIGN
error in line# 72
     lexed as:     );
    should be:  OBJECTID num1
error in line# 73
     lexed as:     (new E).set_var(x);
    should be:  '+'
error in line# 74
     lexed as:  }
    should be:  OBJECTID num2
error in line# 75
     lexed as:       )
    should be:  ';'
error in line# 76
     lexed as:    };
    should be:  '('
error in line# 77
     lexed as: 
    should be:  NEW
error in line# 78
     lexed as: };
    should be:  TYPEID B
error in line# 79
     lexed as: 
    should be:  ')'
error in line# 80
     lexed as:  CLASS
    should be:  '.'
error in line# 81
     lexed as:  inherits A {  -- B is a number squared
    should be:  OBJECTID set_var
error in line# 82
     lexed as: 
    should be:  '('
error in line# 83
     lexed as:    method5(num : Int) : E { -- square
    should be:  OBJECTID x
error in line# 84
     lexed as:       (let x : Int in
    should be:  ')'
error in line# 85
     lexed as:  {
    should be:  ';'
error in line# 86
     lexed as:             x <- num * num;
    should be:  '}'
error in line# 87
     lexed as:     (new E).set_var(x);
    should be:  ')'
error in line# 88
     lexed as:  }
    should be:  '}'
error in line# 89
     lexed as:       )
    should be:  ';'
error in line# 90
     lexed as:    };
    should be:  OBJECTID method3
error in line# 91
     lexed as: 
    should be:  '('
error in line# 92
     lexed as: };
    should be:  OBJECTID num
error in line# 93
     lexed as: 
    should be:  ':'
error in line# 94
     lexed as:  CLASS
    should be:  TYPEID Int
error in line# 95
     lexed as:  inherits B {
    should be:  ')'
error in line# 96
     lexed as: 
    should be:  ':'
error in line# 97
     lexed as:    method6(num : Int) : A { -- negate
    should be:  TYPEID C
error in line# 98
     lexed as:       (let x : Int in
    should be:  '{'
error in line# 99
     lexed as:          {
    should be:  '('
error in line# 100
     lexed as:             x <- ~num;
    should be:  LET
error in line# 101
     lexed as:     (new A).set_var(x);
    should be:  OBJECTID x
error in line# 102
     lexed as:          }
    should be:  ':'
error in line# 103
     lexed as:       )
    should be:  TYPEID Int
error in line# 104
     lexed as:    };
    should be:  IN
error in line# 105
     lexed as: 
    should be:  '{'
error in line# 106
     lexed as:    method5(num : Int) : E {  -- cube
    should be:  OBJECTID x
error in line# 107
     lexed as:       (let x : Int in
    should be:  ASSIGN
error in line# 108
     lexed as:  {
    should be:  '~'
error in line# 109
     lexed as:             x <- num * num * num;
    should be:  OBJECTID num
error in line# 110
     lexed as:     (new E).set_var(x);
    should be:  ';'
error in line# 111
     lexed as:  }
    should be:  '('
error in line# 112
     lexed as:       )
    should be:  NEW
error in line# 113
     lexed as:    };
    should be:  TYPEID C
error in line# 114
     lexed as: 
    should be:  ')'
error in line# 115
     lexed as: };
    should be:  '.'
error in line# 116
     lexed as: 
    should be:  OBJECTID set_var
error in line# 117
     lexed as:  CLASS
    should be:  '('
error in line# 118
     lexed as:  inherits B {  
    should be:  OBJECTID x
error in line# 119
     lexed as: 		
    should be:  ')'
error in line# 120
     lexed as:    method7(num : Int) : Bool {  -- divisible by 3
    should be:  ';'
error in line# 121
     lexed as:       (let x : Int <- num in
    should be:  '}'
error in line# 122
     lexed as:             if x < 0 then method7(~x) #117 ELSE
    should be:  ')'
error in line# 123
     lexed as: 
    should be:  '}'
error in line# 124
     lexed as:             if 0 = x then true #118 ELSE
    should be:  ';'
error in line# 125
     lexed as: 
    should be:  OBJECTID method4
error in line# 126
     lexed as:             if 1 = x then false #119 ELSE
    should be:  '('
error in line# 127
     lexed as: 
    should be:  OBJECTID num1
error in line# 128
     lexed as:     if 2 = x then false #120 ELSE
    should be:  ':'
error in line# 129
     lexed as: 
    should be:  TYPEID Int
error in line# 130
     lexed as:        method7(x - 3)
    should be:  ','
error in line# 131
     lexed as:     fi fi fi fi
    should be:  OBJECTID num2
error in line# 132
     lexed as:       )
    should be:  ':'
error in line# 133
     lexed as:    };
    should be:  TYPEID Int
error in line# 134
     lexed as: 
    should be:  ')'
error in line# 135
     lexed as: };
    should be:  ':'
error in line# 136
     lexed as: 
    should be:  TYPEID D
error in line# 137
     lexed as:  CLASS
    should be:  '{'
error in line# 138
     lexed as:  inherits D {
    should be:  IF
error in line# 139
     lexed as: 
    should be:  OBJECTID num2
error in line# 140
     lexed as:    method6(num : Int) : A {  -- division
    should be:  '<'
error in line# 141
     lexed as:       (let x : Int in
    should be:  OBJECTID num1
error in line# 142
     lexed as:          {
    should be:  THEN
error in line# 143
     lexed as:             x <- num / 8;
    should be:  '('
error in line# 144
     lexed as:     (new A).set_var(x);
    should be:  LET
error in line# 145
     lexed as:          }
    should be:  OBJECTID x
error in line# 146
     lexed as:       )
    should be:  ':'
error in line# 147
     lexed as:    };
    should be:  TYPEID Int
error in line# 148
     lexed as: 
    should be:  IN
error in line# 149
     lexed as: };
    should be:  '{'
error in line# 150
     lexed as: 
    should be:  OBJECTID x
error in line# 151
     lexed as: 
    should be:  ASSIGN
error in line# 152
     lexed as: 
    should be:  OBJECTID num1
error in line# 153
     lexed as: 
    should be:  '-'
error in line# 154
     lexed as: 
    should be:  OBJECTID num2
error in line# 155
     lexed as: 
    should be:  ';'
error in line# 156
     lexed as: 
    should be:  '('
error in line# 157
     lexed as: 
    should be:  NEW
error in line# 158
     lexed as: 
    should be:  TYPEID D
error in line# 159
     lexed as: 
    should be:  ')'
error in line# 160
     lexed as: 
    should be:  '.'
error in line# 161
     lexed as: 
    should be:  OBJECTID set_var
error in line# 162
     lexed as: 
    should be:  '('
error in line# 163
     lexed as: 
    should be:  OBJECTID x
error in line# 164
     lexed as: 
    should be:  ')'
error in line# 165
     lexed as:  CLASS
    should be:  ';'
error in line# 166
     lexed as:  {
    should be:  '}'
error in line# 167
     lexed as: 
    should be:  ')'
error in line# 168
     lexed as:      c2i(char : String) : Int {
    should be:  ELSE
error in line# 169
     lexed as:  char = "0" then 0 #158 ELSE
    should be:  '('
error in line# 170
     lexed as: 
    should be:  LET
error in line# 171
     lexed as:  char = "1" then 1 #159 ELSE
    should be:  OBJECTID x
error in line# 172
     lexed as: 
    should be:  ':'
error in line# 173
     lexed as:  char = "2" then 2 #160 ELSE
    should be:  TYPEID Int
error in line# 174
     lexed as: 
    should be:  IN
error in line# 175
     lexed as:         if char = "3" then 3 #161 ELSE
    should be:  '{'
error in line# 176
     lexed as: 
    should be:  OBJECTID x
error in line# 177
     lexed as:         if char = "4" then 4 #162 ELSE
    should be:  ASSIGN
error in line# 178
     lexed as: 
    should be:  OBJECTID num2
error in line# 179
     lexed as:         if char = "5" then 5 #163 ELSE
    should be:  '-'
error in line# 180
     lexed as: 
    should be:  OBJECTID num1
error in line# 181
     lexed as:         if char = "6" then 6 #164 ELSE
    should be:  ';'
error in line# 182
     lexed as: 
    should be:  '('
error in line# 183
     lexed as:         if char = "7" then 7 #165 ELSE
    should be:  NEW
error in line# 184
     lexed as: 
    should be:  TYPEID D
error in line# 185
     lexed as:         if char = "8" then 8 #166 ELSE
    should be:  ')'
error in line# 186
     lexed as: 
    should be:  '.'
error in line# 187
     lexed as:         if char = "9" then 9 #167 ELSE
    should be:  OBJECTID set_var
error in line# 188
     lexed as: 
    should be:  '('
error in line# 189
     lexed as:         { abort(); 0; }  
    should be:  OBJECTID x
error in line# 190
     lexed as: 
    should be:  ')'
error in line# 191
     lexed as:         fi fi fi fi fi fi fi fi fi fi
    should be:  ';'
error in line# 192
     lexed as:      };
    should be:  '}'
error in line# 193
     lexed as: 
    should be:  ')'
error in line# 194
     lexed as: 
    should be:  FI
error in line# 195
     lexed as: 
    should be:  '}'
error in line# 196
     lexed as: 
    should be:  ';'
error in line# 197
     lexed as:      i2c(i : Int) : String {
    should be:  OBJECTID method5
error in line# 198
     lexed as:  i = 0 then "0" #177 ELSE
    should be:  '('
error in line# 199
     lexed as: 
    should be:  OBJECTID num
error in line# 200
     lexed as:  i = 1 then "1" #178 ELSE
    should be:  ':'
error in line# 201
     lexed as: 
    should be:  TYPEID Int
error in line# 202
     lexed as:  i = 2 then "2" #179 ELSE
    should be:  ')'
error in line# 203
     lexed as: 
    should be:  ':'
error in line# 204
     lexed as:  i = 3 then "3" #180 ELSE
    should be:  TYPEID E
error in line# 205
     lexed as: 
    should be:  '{'
error in line# 206
     lexed as:  i = 4 then "4" #181 ELSE
    should be:  '('
error in line# 207
     lexed as: 
    should be:  LET
error in line# 208
     lexed as:  i = 5 then "5" #182 ELSE
    should be:  OBJECTID x
error in line# 209
     lexed as: 
    should be:  ':'
error in line# 210
     lexed as:  i = 6 then "6" #183 ELSE
    should be:  TYPEID Int
error in line# 211
     lexed as: 
    should be:  ASSIGN
error in line# 212
     lexed as:  i = 7 then "7" #184 ELSE
    should be:  INT_CONST 1
error in line# 213
     lexed as: 
    should be:  IN
error in line# 214
     lexed as:  i = 8 then "8" #185 ELSE
    should be:  '{'
error in line# 215
     lexed as: 
    should be:  '('
error in line# 216
     lexed as:  i = 9 then "9" #186 ELSE
    should be:  LET
error in line# 217
     lexed as: 
    should be:  OBJECTID y
error in line# 218
     lexed as:  abort(); ""; }  -- the "" is needed to satisfy the typchecker
    should be:  ':'
error in line# 219
     lexed as:         fi fi fi fi fi fi fi fi fi fi
    should be:  TYPEID Int
error in line# 220
     lexed as:      };
    should be:  ASSIGN
error in line# 221
     lexed as: 
    should be:  INT_CONST 1
error in line# 222
     lexed as: 
    should be:  IN
error in line# 223
     lexed as: 
    should be:  WHILE
error in line# 224
     lexed as: 
    should be:  OBJECTID y
error in line# 225
     lexed as: 
    should be:  LE
error in line# 226
     lexed as: 
    should be:  OBJECTID num
error in line# 227
     lexed as: 
    should be:  LOOP
error in line# 228
     lexed as: 
    should be:  '{'
error in line# 229
     lexed as: 
    should be:  OBJECTID x
error in line# 230
     lexed as:      a2i(s : String) : Int {
    should be:  ASSIGN
error in line# 231
     lexed as:         if s.length() = 0 then 0 #200 ELSE
    should be:  OBJECTID x
error in line# 232
     lexed as: 
    should be:  '*'
error in line# 233
     lexed as:  s.substr(0,1) = "-" then ~a2i_aux(s.substr(1,s.length()-1)) #201 ELSE
    should be:  OBJECTID y
error in line# 234
     lexed as: 
    should be:  ';'
error in line# 235
     lexed as:         if s.substr(0,1) = "+" then a2i_aux(s.substr(1,s.length()-1)) #202 ELSE
    should be:  OBJECTID y
error in line# 236
     lexed as: 
    should be:  ASSIGN
error in line# 237
     lexed as:            a2i_aux(s)
    should be:  OBJECTID y
error in line# 238
     lexed as:         fi fi fi
    should be:  '+'
error in line# 239
     lexed as:      };
    should be:  INT_CONST 1
error in line# 240
     lexed as: 
    should be:  ';'
error in line# 241
     lexed as: 
    should be:  '}'
error in line# 242
     lexed as: 
    should be:  POOL
error in line# 243
     lexed as: 
    should be:  ')'
error in line# 244
     lexed as: 
    should be:  ';'
error in line# 245
     lexed as:      a2i_aux(s : String) : Int {
    should be:  '('
error in line# 246
     lexed as:  int : Int <- 0 in	
    should be:  NEW
error in line# 247
     lexed as:            {	
    should be:  TYPEID E
error in line# 248
     lexed as:                (let j : Int <- s.length() in
    should be:  ')'
error in line# 249
     lexed as:           (let i : Int <- 0 in
    should be:  '.'
error in line# 250
     lexed as:     while i < j loop
    should be:  OBJECTID set_var
error in line# 251
     lexed as: 			{
    should be:  '('
error in line# 252
     lexed as:     int <- int * 10 + c2i(s.substr(i,1));
    should be:  OBJECTID x
error in line# 253
     lexed as:     i <- i + 1;
    should be:  ')'
error in line# 254
     lexed as: 			}
    should be:  ';'
error in line# 255
     lexed as:     pool
    should be:  '}'
error in line# 256
     lexed as:   )
    should be:  ')'
error in line# 257
     lexed as:        );
    should be:  '}'
error in line# 258
     lexed as:               int;
    should be:  ';'
error in line# 259
     lexed as:     }
    should be:  '}'
error in line# 260
     lexed as:         )
    should be:  ';'
error in line# 261
     lexed as:      };
    should be:  CLASS
error in line# 262
     lexed as: 
    should be:  TYPEID B
error in line# 263
     lexed as: 
    should be:  INHERITS
error in line# 264
     lexed as: 
    should be:  TYPEID A
error in line# 265
     lexed as: 
    should be:  '{'
error in line# 266
     lexed as:     i2a(i : Int) : String {
    should be:  OBJECTID method5
error in line# 267
     lexed as:  i = 0 then "0" #233 ELSE
    should be:  '('
error in line# 268
     lexed as:  
    should be:  OBJECTID num
error in line# 269
     lexed as:         if 0 < i then i2a_aux(i) #234 ELSE
    should be:  ':'
error in line# 270
     lexed as: 
    should be:  TYPEID Int
error in line# 271
     lexed as:           "-".concat(i2a_aux(i * ~1)) 
    should be:  ')'
error in line# 272
     lexed as:         fi fi
    should be:  ':'
error in line# 273
     lexed as:     };
    should be:  TYPEID E
error in line# 274
     lexed as: 	
    should be:  '{'
error in line# 275
     lexed as: 		
    should be:  '('
error in line# 276
     lexed as: 
    should be:  LET
error in line# 277
     lexed as:     i2a_aux(i : Int) : String {
    should be:  OBJECTID x
error in line# 278
     lexed as:         if i = 0 then "" #242 ELSE
    should be:  ':'
error in line# 279
     lexed as:  
    should be:  TYPEID Int
error in line# 280
     lexed as:     (let next : Int <- i / 10 in
    should be:  IN
error in line# 281
     lexed as:  - next * 10))
    should be:  '{'
error in line# 282
     lexed as:     )
    should be:  OBJECTID x
error in line# 283
     lexed as:         fi
    should be:  ASSIGN
error in line# 284
     lexed as:     };
    should be:  OBJECTID num
error in line# 285
     lexed as: 
    should be:  '*'
error in line# 286
     lexed as: };
    should be:  OBJECTID num
error in line# 287
     lexed as: 
    should be:  ';'
error in line# 288
     lexed as:  CLASS
    should be:  '('
error in line# 289
     lexed as:  inherits IO {
    should be:  NEW
error in line# 290
     lexed as:    
    should be:  TYPEID E
error in line# 291
     lexed as:    char : String;
    should be:  ')'
error in line# 292
     lexed as:    avar : A; 
    should be:  '.'
error in line# 293
     lexed as:    a_var : A;
    should be:  OBJECTID set_var
error in line# 294
     lexed as:    flag : Bool <- true;
    should be:  '('
error in line# 295
     lexed as: 
    should be:  OBJECTID x
error in line# 296
     lexed as: 
    should be:  ')'
error in line# 297
     lexed as:    menu() : String {
    should be:  ';'
error in line# 298
     lexed as:       {
    should be:  '}'
error in line# 299
     lexed as:          out_string("\n\tTo add a number to ");
    should be:  ')'
error in line# 300
     lexed as:          print(avar);
    should be:  '}'
error in line# 301
     lexed as:          out_string("...enter a:\n");
    should be:  ';'
error in line# 302
     lexed as:          out_string("\tTo negate ");
    should be:  '}'
error in line# 303
     lexed as:          print(avar);
    should be:  ';'
error in line# 304
     lexed as:          out_string("...enter b:\n");
    should be:  CLASS
error in line# 305
     lexed as:          out_string("\tTo find the difference between ");
    should be:  TYPEID C
error in line# 306
     lexed as:          print(avar);
    should be:  INHERITS
error in line# 307
     lexed as:          out_string("and another number...enter c:\n");
    should be:  TYPEID B
error in line# 308
     lexed as:          out_string("\tTo find the factorial of ");
    should be:  '{'
error in line# 309
     lexed as:          print(avar);
    should be:  OBJECTID method6
error in line# 310
     lexed as:          out_string("...enter d:\n");
    should be:  '('
error in line# 311
     lexed as:          out_string("\tTo square ");
    should be:  OBJECTID num
error in line# 312
     lexed as:          print(avar);
    should be:  ':'
error in line# 313
     lexed as:          out_string("...enter e:\n");
    should be:  TYPEID Int
error in line# 314
     lexed as:          out_string("\tTo cube ");
    should be:  ')'
error in line# 315
     lexed as:          print(avar);
    should be:  ':'
error in line# 316
     lexed as:          out_string("...enter f:\n");
    should be:  TYPEID A
error in line# 317
     lexed as:          out_string("\tTo find out if ");
    should be:  '{'
error in line# 318
     lexed as:          print(avar);
    should be:  '('
error in line# 319
     lexed as:          out_string("is a multiple of 3...enter g:\n");
    should be:  LET
error in line# 320
     lexed as:          out_string("\tTo divide ");
    should be:  OBJECTID x
error in line# 321
     lexed as:          print(avar);
    should be:  ':'
error in line# 322
     lexed as:          out_string("by 8...enter h:\n");
    should be:  TYPEID Int
error in line# 323
     lexed as:  out_string("\tTo get a new number...enter j:\n");
    should be:  IN
error in line# 324
     lexed as:  out_string("\tTo quit...enter q:\n\n");
    should be:  '{'
error in line# 325
     lexed as:          in_string();
    should be:  OBJECTID x
error in line# 326
     lexed as:       }
    should be:  ASSIGN
error in line# 327
     lexed as:    };
    should be:  '~'
error in line# 328
     lexed as: 
    should be:  OBJECTID num
error in line# 329
     lexed as:    prompt() : String {
    should be:  ';'
error in line# 330
     lexed as:       {
    should be:  '('
error in line# 331
     lexed as:          out_string("\n");
    should be:  NEW
error in line# 332
     lexed as:          out_string("Please enter a number...  ");
    should be:  TYPEID A
error in line# 333
     lexed as:          in_string();
    should be:  ')'
error in line# 334
     lexed as:       }
    should be:  '.'
error in line# 335
     lexed as:    };
    should be:  OBJECTID set_var
error in line# 336
     lexed as: 
    should be:  '('
error in line# 337
     lexed as:    get_int() : Int {
    should be:  OBJECTID x
error in line# 338
     lexed as:       {
    should be:  ')'
error in line# 339
     lexed as:  (let z : A2I <- new A2I in
    should be:  ';'
error in line# 340
     lexed as:     (let s : String <- prompt() in
    should be:  '}'
error in line# 341
     lexed as:        z.a2i(s)
    should be:  ')'
error in line# 342
     lexed as:     )
    should be:  '}'
error in line# 343
     lexed as:          );
    should be:  ';'
error in line# 344
     lexed as:       }
    should be:  OBJECTID method5
error in line# 345
     lexed as:    };
    should be:  '('
error in line# 346
     lexed as: 
    should be:  OBJECTID num
error in line# 347
     lexed as:    is_even(num : Int) : Bool {
    should be:  ':'
error in line# 348
     lexed as:       (let x : Int <- num in
    should be:  TYPEID Int
error in line# 349
     lexed as:             if x < 0 then is_even(~x) #311 ELSE
    should be:  ')'
error in line# 350
     lexed as: 
    should be:  ':'
error in line# 351
     lexed as:             if 0 = x then true #312 ELSE
    should be:  TYPEID E
error in line# 352
     lexed as: 
    should be:  '{'
error in line# 353
     lexed as:     if 1 = x then false #313 ELSE
    should be:  '('
error in line# 354
     lexed as: 
    should be:  LET
error in line# 355
     lexed as:           is_even(x - 2)
    should be:  OBJECTID x
error in line# 356
     lexed as:     fi fi fi
    should be:  ':'
error in line# 357
     lexed as:       )
    should be:  TYPEID Int
error in line# 358
     lexed as:    };
    should be:  IN
error in line# 359
     lexed as: 
    should be:  '{'
error in line# 360
     lexed as:    class_type(var : A) : SELF_TYPE {
    should be:  OBJECTID x
error in line# 361
     lexed as:       case var of
    should be:  ASSIGN
error in line# 362
     lexed as:  a : A #321 DARROW
    should be:  OBJECTID num
error in line# 363
     lexed as:  out_string("Class type is now A\n");
    should be:  '*'
error in line# 364
     lexed as:  b : B #322 DARROW
    should be:  OBJECTID num
error in line# 365
     lexed as:  out_string("Class type is now B\n");
    should be:  '*'
error in line# 366
     lexed as:  c : C #323 DARROW
    should be:  OBJECTID num
error in line# 367
     lexed as:  out_string("Class type is now C\n");
    should be:  ';'
error in line# 368
     lexed as:  d : D #324 DARROW
    should be:  '('
error in line# 369
     lexed as:  out_string("Class type is now D\n");
    should be:  NEW
error in line# 370
     lexed as:  e : E #325 DARROW
    should be:  TYPEID E
error in line# 371
     lexed as:  out_string("Class type is now E\n");
    should be:  ')'
error in line# 372
     lexed as:  o : Object #326 DARROW
    should be:  '.'
error in line# 373
     lexed as:  out_string("Oooops\n");
    should be:  OBJECTID set_var
error in line# 374
     lexed as:       esac
    should be:  '('
error in line# 375
     lexed as:    };
    should be:  OBJECTID x
error in line# 376
     lexed as:  
    should be:  ')'
error in line# 377
     lexed as:    print(var : A) : SELF_TYPE {
    should be:  ';'
error in line# 378
     lexed as:      (let z : A2I <- new A2I in
    should be:  '}'
error in line# 379
     lexed as: 	{
    should be:  ')'
error in line# 380
     lexed as:    out_string(z.i2a(var.value()));
    should be:  '}'
error in line# 381
     lexed as:    out_string(" ");
    should be:  ';'
error in line# 382
     lexed as: 	}
    should be:  '}'
error in line# 383
     lexed as:      )
    should be:  ';'
error in line# 384
     lexed as:    };
    should be:  CLASS
error in line# 385
     lexed as: 
    should be:  TYPEID D
error in line# 386
     lexed as:    main() : Object {
    should be:  INHERITS
error in line# 387
     lexed as:       {
    should be:  TYPEID B
error in line# 388
     lexed as:          avar <- (new A);
    should be:  '{'
error in line# 389
     lexed as:          while flag loop
    should be:  OBJECTID method7
error in line# 390
     lexed as:             {
    should be:  '('
error in line# 391
     lexed as:        -- avar <- (new A).set_var(get_int());
    should be:  OBJECTID num
error in line# 392
     lexed as:        out_string("number ");
    should be:  ':'
error in line# 393
     lexed as:        print(avar);
    should be:  TYPEID Int
error in line# 394
     lexed as:        if is_even(avar.value()) then
    should be:  ')'
error in line# 395
     lexed as:           out_string("is even!\n")
    should be:  ':'
error in line# 396
     lexed as:        #349 ELSE
    should be:  TYPEID Bool
error in line# 397
     lexed as: 
    should be:  '{'
error in line# 398
     lexed as:           out_string("is odd!\n")
    should be:  '('
error in line# 399
     lexed as:        fi;
    should be:  LET
error in line# 400
     lexed as:        -- print(avar); -- prints out answer
    should be:  OBJECTID x
error in line# 401
     lexed as:        class_type(avar);
    should be:  ':'
error in line# 402
     lexed as:        char <- menu();
    should be:  TYPEID Int
error in line# 403
     lexed as:                   if char = "a" then -- add
    should be:  ASSIGN
error in line# 404
     lexed as:                      {
    should be:  OBJECTID num
error in line# 405
     lexed as:                         a_var <- (new A).set_var(get_int());
    should be:  IN
error in line# 406
     lexed as:                 avar <- (new B).method2(avar.value(), a_var.value());
    should be:  IF
error in line# 407
     lexed as:              } #359 ELSE
    should be:  OBJECTID x
error in line# 408
     lexed as: 
    should be:  '<'
error in line# 409
     lexed as:                   if char = "b" then -- negate
    should be:  INT_CONST 0
error in line# 410
     lexed as:                      case avar of
    should be:  THEN
error in line# 411
     lexed as:                    c : C #362 DARROW
    should be:  OBJECTID method7
error in line# 412
     lexed as:  avar <- c.method6(c.value());
    should be:  '('
error in line# 413
     lexed as:                    a : A #363 DARROW
    should be:  '~'
error in line# 414
     lexed as:  avar <- a.method3(a.value());
    should be:  OBJECTID x
error in line# 415
     lexed as:                    o : Object #364 DARROW
    should be:  ')'
error in line# 416
     lexed as:  {
    should be:  ELSE
error in line# 417
     lexed as:                   out_string("Oooops\n");
    should be:  IF
error in line# 418
     lexed as:                   abort(); 0;
    should be:  INT_CONST 0
error in line# 419
     lexed as:                };
    should be:  '='
error in line# 420
     lexed as:                      esac #368 ELSE
    should be:  OBJECTID x
error in line# 421
     lexed as: 
    should be:  THEN
error in line# 422
     lexed as:                   if char = "c" then -- diff
    should be:  BOOL_CONST true
error in line# 423
     lexed as:                      {
    should be:  ELSE
error in line# 424
     lexed as:                         a_var <- (new A).set_var(get_int());
    should be:  IF
error in line# 425
     lexed as:                 avar <- (new D).method4(avar.value(), a_var.value());
    should be:  INT_CONST 1
error in line# 426
     lexed as:              } #373 ELSE
    should be:  '='
error in line# 427
     lexed as: 
    should be:  OBJECTID x
error in line# 428
     lexed as:                   if char = "d" then avar <- (new C)@A.method5(avar.value()) #374 ELSE
    should be:  THEN
error in line# 429
     lexed as: 
    should be:  BOOL_CONST false
error in line# 430
     lexed as:           -- factorial
    should be:  ELSE
error in line# 431
     lexed as:                   if char = "e" then avar <- (new C)@B.method5(avar.value()) #376 ELSE
    should be:  IF
error in line# 432
     lexed as: 
    should be:  INT_CONST 2
error in line# 433
     lexed as:   -- square
    should be:  '='
error in line# 434
     lexed as:                   if char = "f" then avar <- (new C)@C.method5(avar.value()) #378 ELSE
    should be:  OBJECTID x
error in line# 435
     lexed as: 
    should be:  THEN
error in line# 436
     lexed as:   -- cube
    should be:  BOOL_CONST false
error in line# 437
     lexed as:                   if char = "g" then -- multiple of 3?
    should be:  ELSE
error in line# 438
     lexed as:       if ((new D).method7(avar.value()))
    should be:  OBJECTID method7
error in line# 439
     lexed as:                        then -- avar <- (new A).method1(avar.value())
    should be:  '('
error in line# 440
     lexed as:  {
    should be:  OBJECTID x
error in line# 441
     lexed as:                     out_string("number ");
    should be:  '-'
error in line# 442
     lexed as:                     print(avar);
    should be:  INT_CONST 3
error in line# 443
     lexed as:                     out_string("is divisible by 3.\n");
    should be:  ')'
error in line# 444
     lexed as:  }
    should be:  FI
error in line# 445
     lexed as:  #388 ELSE
    should be:  FI
error in line# 446
     lexed as:   -- avar <- (new A).set_var(0)
    should be:  FI
error in line# 447
     lexed as:  {
    should be:  FI
error in line# 448
     lexed as:                     out_string("number ");
    should be:  ')'
error in line# 449
     lexed as:                     print(avar);
    should be:  '}'
error in line# 450
     lexed as:                     out_string("is not divisible by 3.\n");
    should be:  ';'
error in line# 451
     lexed as:  }
    should be:  '}'
error in line# 452
     lexed as:       fi #394 ELSE
    should be:  ';'
error in line# 453
     lexed as: 
    should be:  CLASS
error in line# 454
     lexed as:                   if char = "h" then 
    should be:  TYPEID E
error in line# 455
     lexed as:       (let x : A in
    should be:  INHERITS
error in line# 456
     lexed as:  {
    should be:  TYPEID D
error in line# 457
     lexed as:             x <- (new E).method6(avar.value());
    should be:  '{'
error in line# 458
     lexed as:     (let r : Int <- (avar.value() - (x.value() * 8)) in
    should be:  OBJECTID method6
error in line# 459
     lexed as:        {
    should be:  '('
error in line# 460
     lexed as:           out_string("number ");
    should be:  OBJECTID num
error in line# 461
     lexed as:           print(avar);
    should be:  ':'
error in line# 462
     lexed as:           out_string("is equal to ");
    should be:  TYPEID Int
error in line# 463
     lexed as:           print(x);
    should be:  ')'
error in line# 464
     lexed as:           out_string("times 8 with a remainder of ");
    should be:  ':'
error in line# 465
     lexed as:   (let a : A2I <- new A2I in
    should be:  TYPEID A
error in line# 466
     lexed as:      {
    should be:  '{'
error in line# 467
     lexed as:                 out_string(a.i2a(r));
    should be:  '('
error in line# 468
     lexed as:                 out_string("\n");
    should be:  LET
error in line# 469
     lexed as:      }
    should be:  OBJECTID x
error in line# 470
     lexed as:   ); -- end let a:
    should be:  ':'
error in line# 471
     lexed as:        }
    should be:  TYPEID Int
error in line# 472
     lexed as:                             ); -- end let r:
    should be:  IN
error in line# 473
     lexed as:     avar <- x;
    should be:  '{'
error in line# 474
     lexed as:          } 
    should be:  OBJECTID x
error in line# 475
     lexed as:       )  -- end let x:
    should be:  ASSIGN
error in line# 476
     lexed as:       #417 ELSE
    should be:  OBJECTID num
error in line# 477
     lexed as: 
    should be:  '/'
error in line# 478
     lexed as:                   if char = "j" then avar <- (new A)
    should be:  INT_CONST 8
error in line# 479
     lexed as:       #419 ELSE
    should be:  ';'
error in line# 480
     lexed as: 
    should be:  '('
error in line# 481
     lexed as:                   if char = "q" then flag <- false
    should be:  NEW
error in line# 482
     lexed as:       #421 ELSE
    should be:  TYPEID A
error in line# 483
     lexed as: 
    should be:  ')'
error in line# 484
     lexed as:                       avar <- (new A).method1(avar.value()) -- divide/8
    should be:  '.'
error in line# 485
     lexed as:                   fi fi fi fi fi fi fi fi fi fi;
    should be:  OBJECTID set_var
error in line# 486
     lexed as:             }
    should be:  '('
error in line# 487
     lexed as:          pool;
    should be:  OBJECTID x
error in line# 488
     lexed as:        }
    should be:  ')'
error in line# 489
     lexed as:    };
    should be:  ';'
error in line# 490
     lexed as: 
    should be:  '}'
error in line# 491
     lexed as: };
    should be:  ')'
error in line# 492
     lexed as: 
    should be:  '}'
