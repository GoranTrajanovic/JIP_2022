error in line# 1
     lexed as: 
    should be:  CLASS
error in line# 2
     lexed as: 
    should be:  TYPEID List
error in line# 3
     lexed as: 
    should be:  INHERITS
error in line# 4
     lexed as: 
    should be:  TYPEID IO
error in line# 5
     lexed as: 
    should be:  '{'
error in line# 6
     lexed as: 
    should be:  OBJECTID isNil
error in line# 7
     lexed as: 
    should be:  '('
error in line# 8
     lexed as: 
    should be:  ')'
error in line# 9
     lexed as: 
    should be:  ':'
error in line# 10
     lexed as: 
    should be:  TYPEID Bool
error in line# 11
     lexed as: 
    should be:  '{'
error in line# 12
     lexed as: 
    should be:  '{'
error in line# 13
     lexed as: 
    should be:  OBJECTID abort
error in line# 14
     lexed as: 
    should be:  '('
error in line# 15
     lexed as: 
    should be:  ')'
error in line# 16
     lexed as: 
    should be:  ';'
error in line# 17
     lexed as: 
    should be:  BOOL_CONST true
error in line# 18
     lexed as: 
    should be:  ';'
error in line# 19
     lexed as: 
    should be:  '}'
error in line# 20
     lexed as: 
    should be:  '}'
error in line# 21
     lexed as: 
    should be:  ';'
error in line# 22
     lexed as: 
    should be:  OBJECTID cons
error in line# 23
     lexed as: 
    should be:  '('
error in line# 24
     lexed as:  List inherits IO { 
    should be:  OBJECTID hd
error in line# 25
     lexed as:         
    should be:  ':'
error in line# 26
     lexed as: 
    should be:  TYPEID Int
error in line# 27
     lexed as: 
    should be:  ')'
error in line# 28
     lexed as:  : Bool { { abort(); true; } };
    should be:  ':'
error in line# 29
     lexed as: 
    should be:  TYPEID Cons
error in line# 30
     lexed as:  : Int) : Cons {
    should be:  '{'
error in line# 31
     lexed as:   (let new_cell : Cons <- new Cons in
    should be:  '('
error in line# 32
     lexed as: 		new_cell.init(hd,self)
    should be:  LET
error in line# 33
     lexed as:   )
    should be:  OBJECTID new_cell
error in line# 34
     lexed as: 	};
    should be:  ':'
error in line# 35
     lexed as: 
    should be:  TYPEID Cons
error in line# 36
     lexed as: 	
    should be:  ASSIGN
error in line# 37
     lexed as: 
    should be:  NEW
error in line# 38
     lexed as: 
    should be:  TYPEID Cons
error in line# 39
     lexed as: 
    should be:  IN
error in line# 40
     lexed as: 
    should be:  OBJECTID new_cell
error in line# 41
     lexed as:  : Int { { abort(); new Int; } };
    should be:  '.'
error in line# 42
     lexed as: 
    should be:  OBJECTID init
error in line# 43
     lexed as:  : List { { abort(); new List; } };
    should be:  '('
error in line# 44
     lexed as: 
    should be:  OBJECTID hd
error in line# 45
     lexed as:  : List { cdr() };
    should be:  ','
error in line# 46
     lexed as: 
    should be:  OBJECTID self
error in line# 47
     lexed as:  : List { cdr() };
    should be:  ')'
error in line# 48
     lexed as: 
    should be:  ')'
error in line# 49
     lexed as:  : Int) : List { cdr() };
    should be:  '}'
error in line# 50
     lexed as: 
    should be:  ';'
error in line# 51
     lexed as:  : Int) : List { cdr() };
    should be:  OBJECTID car
error in line# 52
     lexed as: 	
    should be:  '('
error in line# 53
     lexed as:  : Object { abort() };
    should be:  ')'
error in line# 54
     lexed as: };
    should be:  ':'
error in line# 55
     lexed as: 
    should be:  TYPEID Int
error in line# 56
     lexed as:  Cons inherits List {
    should be:  '{'
error in line# 57
     lexed as:  : Int;  -- We keep the car in cdr in attributes.
    should be:  '{'
error in line# 58
     lexed as:  : List; -- Because methods and features must have different names,
    should be:  OBJECTID abort
error in line# 59
     lexed as:      -- we use xcar and xcdr for the attributes and reserve
    should be:  '('
error in line# 60
     lexed as:      -- cons and car for the features.
    should be:  ')'
error in line# 61
     lexed as: 
    should be:  ';'
error in line# 62
     lexed as:  : Bool { false };
    should be:  NEW
error in line# 63
     lexed as: 
    should be:  TYPEID Int
error in line# 64
     lexed as:  : Int, tl : List) : Cons {
    should be:  ';'
error in line# 65
     lexed as:   {
    should be:  '}'
error in line# 66
     lexed as:     xcar <- hd;
    should be:  '}'
error in line# 67
     lexed as:     xcdr <- tl;
    should be:  ';'
error in line# 68
     lexed as:     self;
    should be:  OBJECTID cdr
error in line# 69
     lexed as:   }
    should be:  '('
error in line# 70
     lexed as: 	};
    should be:  ')'
error in line# 71
     lexed as:   
    should be:  ':'
error in line# 72
     lexed as:  : Int { xcar };
    should be:  TYPEID List
error in line# 73
     lexed as: 
    should be:  '{'
error in line# 74
     lexed as:  : List { xcdr };
    should be:  '{'
error in line# 75
     lexed as: 
    should be:  OBJECTID abort
error in line# 76
     lexed as:  : List { (xcdr.rev()).rcons(xcar) };
    should be:  '('
error in line# 77
     lexed as: 
    should be:  ')'
error in line# 78
     lexed as:  : List { (xcdr.sort()).insert(xcar) };
    should be:  ';'
error in line# 79
     lexed as: 
    should be:  NEW
error in line# 80
     lexed as:  : Int) : List {
    should be:  TYPEID List
error in line# 81
     lexed as:  i < xcar then
    should be:  ';'
error in line# 82
     lexed as:  Cons).init(i,self)
    should be:  '}'
error in line# 83
     lexed as:  ELSE
    should be:  '}'
error in line# 84
     lexed as: 
    should be:  ';'
error in line# 85
     lexed as:  Cons).init(xcar,xcdr.insert(i))
    should be:  OBJECTID rev
error in line# 86
     lexed as: 		fi
    should be:  '('
error in line# 87
     lexed as: 	};
    should be:  ')'
error in line# 88
     lexed as: 
    should be:  ':'
error in line# 89
     lexed as: 
    should be:  TYPEID List
error in line# 90
     lexed as:  : Int) : List { (new Cons).init(xcar, xcdr.rcons(i)) };
    should be:  '{'
error in line# 91
     lexed as: 
    should be:  OBJECTID cdr
error in line# 92
     lexed as:  : Object {
    should be:  '('
error in line# 93
     lexed as: 		{
    should be:  ')'
error in line# 94
     lexed as:      out_int(xcar);
    should be:  '}'
error in line# 95
     lexed as:      out_string("\n");
    should be:  ';'
error in line# 96
     lexed as:      xcdr.print_list();
    should be:  OBJECTID sort
error in line# 97
     lexed as: 		}
    should be:  '('
error in line# 98
     lexed as: 	};
    should be:  ')'
error in line# 99
     lexed as: };
    should be:  ':'
error in line# 100
     lexed as: 
    should be:  TYPEID List
error in line# 101
     lexed as:  Nil inherits List {
    should be:  '{'
error in line# 102
     lexed as:  : Bool { true };
    should be:  OBJECTID cdr
error in line# 103
     lexed as: 
    should be:  '('
error in line# 104
     lexed as:         rev() : List { self };
    should be:  ')'
error in line# 105
     lexed as: 
    should be:  '}'
error in line# 106
     lexed as:  : List { self };
    should be:  ';'
error in line# 107
     lexed as: 
    should be:  OBJECTID insert
error in line# 108
     lexed as:  : Int) : List { rcons(i) };
    should be:  '('
error in line# 109
     lexed as: 
    should be:  OBJECTID i
error in line# 110
     lexed as:  : Int) : List { (new Cons).init(i,self) };
    should be:  ':'
error in line# 111
     lexed as: 
    should be:  TYPEID Int
error in line# 112
     lexed as:  : Object { true };
    should be:  ')'
error in line# 113
     lexed as: 
    should be:  ':'
error in line# 114
     lexed as: };
    should be:  TYPEID List
error in line# 115
     lexed as: 
    should be:  '{'
error in line# 116
     lexed as: 
    should be:  OBJECTID cdr
error in line# 117
     lexed as:  Main inherits IO {
    should be:  '('
error in line# 118
     lexed as: 
    should be:  ')'
error in line# 119
     lexed as:  : List;
    should be:  '}'
error in line# 120
     lexed as: 
    should be:  ';'
error in line# 121
     lexed as: 	
    should be:  OBJECTID rcons
error in line# 122
     lexed as:  : Int) : List {
    should be:  '('
error in line# 123
     lexed as:     {
    should be:  OBJECTID i
error in line# 124
     lexed as:  <- new Nil;
    should be:  ':'
error in line# 125
     lexed as:  j : Int <- 0 in
    should be:  TYPEID Int
error in line# 126
     lexed as:    while j < i 
    should be:  ')'
error in line# 127
     lexed as:    loop 
    should be:  ':'
error in line# 128
     lexed as:      {
    should be:  TYPEID List
error in line# 129
     lexed as:        l <- (new Cons).init(j,l);
    should be:  '{'
error in line# 130
     lexed as:        j <- j + 1;
    should be:  OBJECTID cdr
error in line# 131
     lexed as:      } 
    should be:  '('
error in line# 132
     lexed as:    pool
    should be:  ')'
error in line# 133
     lexed as: 		);
    should be:  '}'
error in line# 134
     lexed as: 		l;
    should be:  ';'
error in line# 135
     lexed as:     }
    should be:  OBJECTID print_list
error in line# 136
     lexed as: 	};		
    should be:  '('
error in line# 137
     lexed as: 
    should be:  ')'
error in line# 138
     lexed as:  : Object {
    should be:  ':'
error in line# 139
     lexed as:    {
    should be:  TYPEID Object
error in line# 140
     lexed as:      out_string("How many numbers to sort?");
    should be:  '{'
error in line# 141
     lexed as:      iota(in_int()).rev().sort().print_list();
    should be:  OBJECTID abort
error in line# 142
     lexed as:    }
    should be:  '('
error in line# 143
     lexed as: 	};
    should be:  ')'
error in line# 144
     lexed as:     
    should be:  '}'
error in line# 145
     lexed as: 
    should be:  ';'
error in line# 146
     lexed as: 
    should be:  '}'
error in line# 147
     lexed as: 
    should be:  ';'
error in line# 148
     lexed as: 
    should be:  CLASS
error in line# 149
     lexed as: 
    should be:  TYPEID Cons
